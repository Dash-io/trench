# name: test
# on:
#   pull_request:
#     branches:
#       - main
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432
#     env:
#       DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres?pgbouncer=true
#       JWT_SECRET: ""
#       MAXMIND_ACCOUNT_ID: ""
#       MAXMIND_LICENSE_KEY: ""
#       API_KEY: "API_KEY"
#       NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ""
#     defaults:
#       run:
#         working-directory: dashboard/
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: "18.x"
#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"
#       - uses: actions/cache@v2
#         id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - run: yarn install --frozen-lockfile
#       - name: Cache Prisma Client
#         uses: actions/cache@v2
#         with:
#           path: ~/.prisma/client
#           key: ${{ runner.os }}-prisma-${{ hashFiles('prisma/**/*.prisma') }}
#           restore-keys: |
#             ${{ runner.os }}-prisma-
#       - run: npx prisma migrate deploy
#       - run: ./node_modules/.bin/vitest run
